int hopscotch(int n, int m, vector<vector<int>> mat, int ty, int i, int j)
    {
        // code here
        int res=0;
        if(ty==0)
        {
            vector<int>dx{-1,0,1,1,1,0};
            vector<int>dy{0,1,1,0,-1,-1};
            if(j%2==0)
            {
                for(int x=0;x<6;x++)
                {
                    dx[x]=-1*dx[x];
                    dy[x]=-1*dy[x];
                }
                for(int x=0;x<6;x++)
                {
                    int a=i+dx[x];
                    int b=j+dy[x];
                    if(a>=0 && a<n && b>=0 && b<m)
                    {
                        res=res+mat[a][b];
                    }
                    
                }
            }
            else
            {
                
                for(int x=0;x<6;x++)
                {
                    int a=i+dx[x];
                    int b=j+dy[x];
                    if(a>=0 && a<n && b>=0 && b<m)
                    {
                        res=res+mat[a][b];
                    }
                }
            }
            
        }
        else
        {
            vector<int>dx{-2,-2,-2,-1,0,1,1,2,1,1,0,-1};
            vector<int>dy{-1,0,1,2,2,2,1,0,-1,-2,-2,-2};
            
            if(j%2==0)
            {
                for(int x=0;x<12;x++)
                {
                    int a=i+dx[x];
                    int b=j+dy[x];
                    if(a>=0 && a<n && b>=0 && b<m)
                    {
                        res=res+mat[a][b];
                    }
                }
            }
            else
            {
                for(int x=0;x<12;x++)
                {
                    dx[x]=-1*dx[x];
                    dy[x]=-1*dy[x];
                }
                for(int x=0;x<12;x++)
                {
                    int a=i+dx[x];
                    int b=j+dy[x];
                    if(a>=0 && a<n && b>=0 && b<m)
                    {
                        res=res+mat[a][b];
                    }
                }
            }
        }
        return res;
    }
